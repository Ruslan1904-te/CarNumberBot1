import pandas as pd
import random
import asyncio
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message
from aiogram.filters import Command
import os

TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if not TOKEN:
    raise ValueError("–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç —Ç–æ–∫–µ–Ω –±–æ—Ç–∞! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ TELEGRAM_BOT_TOKEN –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è.")

bot = Bot(token=TOKEN)
dp = Dispatcher()

def load_price_database():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å —Ü–µ–Ω–∞–º–∏ –Ω–æ–º–µ—Ä–æ–≤."""
    data = {
        "–ù–æ–º–µ—Ä": ["–ê777–ê–ê 77", "–ú555–ú–ú 99", "–û001–û–û 77", "–¢222–¢–¢ 78", "–ö888–ö–ö 97"],
        "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": ["–û—á–µ–Ω—å –∫—Ä–∞—Å–∏–≤—ã–π", "–û—á–µ–Ω—å –∫—Ä–∞—Å–∏–≤—ã–π", "–≠–ª–∏—Ç–Ω—ã–π", "–ö—Ä–∞—Å–∏–≤—ã–π", "–ö—Ä–∞—Å–∏–≤—ã–π"],
        "–¶–µ–Ω–∞ (—Ä—É–±.)": [5000000, 3500000, 7000000, 1500000, 2000000]
    }
    return pd.DataFrame(data)

def generate_price(number):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Å–ª—É—á–∞–π–Ω—É—é —Ü–µ–Ω—É –¥–ª—è —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –Ω–æ–º–µ—Ä–æ–≤."""
    base_price = random.randint(10000, 100000)  # –ë–∞–∑–æ–≤–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å –æ–±—ã—á–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞
    variation = random.randint(-5000, 5000)  # –ù–µ–±–æ–ª—å—à–∞—è –≤–∞—Ä–∏–∞—Ü–∏—è –≤ —Ü–µ–Ω–µ
    return max(1000, base_price + variation)  # –ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —Ü–µ–Ω–∞ - 1000 —Ä—É–±.

def analyze_number(number, db):
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –Ω–æ–º–µ—Ä –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ —Ü–µ–Ω—É –∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é."""
    result = db[db["–ù–æ–º–µ—Ä"] == number]
    if not result.empty:
        return result.iloc[0].to_dict()
    else:
        return {"–ù–æ–º–µ—Ä": number, "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–û–±—ã—á–Ω—ã–π", "–¶–µ–Ω–∞ (—Ä—É–±.)": generate_price(number)}

@dp.message(Command("start"))
async def cmd_start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è, –∏ —è —Å–∫–∞–∂—É –µ–≥–æ –ø—Ä–∏–º–µ—Ä–Ω—É—é —Å—Ç–æ–∏–º–æ—Å—Ç—å üöóüí∞")

@dp.message()
async def handle_message(message: Message):
    db = load_price_database()
    user_input = message.text.strip()
    result = analyze_number(user_input, db)
    response = f"–ù–æ–º–µ—Ä: {result['–ù–æ–º–µ—Ä']}\n–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {result['–ö–∞—Ç–µ–≥–æ—Ä–∏—è']}\n–¶–µ–Ω–∞: {result['–¶–µ–Ω–∞ (—Ä—É–±.)']} —Ä—É–±."
    await message.answer(response)

async def main():
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω üöÄ")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
